import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react';
const inter = Inter({ subsets: ['latin'] })


export default function Home() {

  const [newLocations, setNewLocations] = useState([]);

  function locationUpdateHandler(event) {
    event.preventDefault();

    // get a random reply from data.js
    // const randomReply = replies[Math.floor(Math.random() * replies.length)];

    // build an object representing the question and reply
    const newLocation = {
        location: event.target.location.value,
        minCustomers: event.target.min.value,
        maxCustomers: event.target.max.value,
        avgCustomers: event.target.avg.value,
    };


    //alert(event.target.question.value);
    //alert(randomReply);
    //setReply(randomReply);
    setNewLocations([...newLocations, newLocation]);
  }



  return (
    <>
      <Head>
        <title>Cookie Stand Admin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className='flex items-center justify-between p-4 bg-pink-700 text-gray-50'>
        <h1>Cookie Stand Admin</h1>
      </header>
      <main>
        <aside>
          <form className="flex w-3/4 p-6 mx-auto my-6 bg-gray-200" onSubmit={locationUpdateHandler}>
            <fieldset>
              <legend className='content-center w-1/4 mx-auto my-4 bg-gray-200'>Create Cookie Stand</legend>
              <label className='content-center mx-2 my-2 d-block'>Location
                <input className='content-center mx-2 my-2 w-10/12 d-block' type="text" name="location" placeholder=" ex: Rome" required />
              </label>
              <label className='inline-grid text-center justify-between p-2'>Min Customers per Hour
                <input className='mx-2 my-2' type="number" name="min" required />
              </label>
              <label className='inline-grid text-center justify-between p-2 my-9 d-block'>Max Customers per Hour
                <input className='mx-2 my-2 d-block' type="number" name="max" required />
              </label>
              <label className='inline-grid text-center justify-between p-2 my-6 d-block'>Avg Cookies per Customer
                <input className='mx-2 my-2 d-block' type="number" name="avg" required />
              </label>

              <button className="inline-grid text-center w-48 mx-2 my-2 px-6 py-4 bg-gray-500 text-gray-50">Create</button>
            </fieldset>
          </form>
        </aside>

        <table className='w-1/2 mx-auto my-4'>
            <thead>
                <tr>
                    <th className='border border-gray-700'>Location</th>
                    <th className='border border-gray-700'>minCustomers</th>
                    <th className='border border-gray-700'>maxCustomers</th>
                    <th className='border border-gray-700'>avgCookies</th>
                </tr>
            </thead>
            <tbody>
                {/* <tr>
                      <td className="pl-2 border border-gray-700">1. </td>
                      <td className="pl-2 border border-gray-700">Will it rain?</td>
                      <td className="pl-2 border border-gray-700">Yes.</td>
                </tr> */}
                {
                    newLocations.map((item) => {
                        return (
                          <tr key={item.id}>
                            <td className="pl-2 border border-gray-700">{item.location}</td>
                            <td className="pl-2 border border-gray-700">{item.min}</td>
                            <td className="pl-2 border border-gray-700">{item.max}</td>
                            <td className="pl-2 border border-gray-700">{item.avg}</td>
                      </tr>
                        );
                    })
                }
            </tbody>
        </table>

      </main>
      <footer className='p-4 mt-8 bg-pink-700 text-gray-50'>
        <p> Â© Ricardo Soto-Fabela 2023 </p>
      </footer>
    </>
  )
}




// Dont undo after this!!!
